doctype html

html
  head
    link(rel='stylesheet', href='/css/index.css')
    // load c3.css
    link(rel='stylesheet', href='/c3/c3.css', type='text/css')
    //load angular js
    script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular.min.js')
    //load jquery
    script(type='text/javascript', src='http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js')
    //load c3.js and d3.js
    script(src='/d3/d3.min.js', charset='utf-8')
    script(src='/c3/c3.min.js')

    // angularjs controllers
    script.
      var app = angular.module('dashboard', [])

      app.controller('trainCtrl', function($scope) {
        // add the function to dynamically display the cnn traning process outputs
        
      })

      app.controller('chartCtrl', function($scope) {
        // add the function to dynamically read the AP data from back-end
      })

      app.controller('inputCtrl', function($scope) {
        // add the function to handle the input data, including images, labels, etc.
      })

      app.controller('searchCtrl', function($scope) {
        $scope.searchButton = function() {
          // add the function for image search
        }
      })

      app.controller('modelCtrl', function($scope) {
        // add the function to change the network correspondingly
        $scope.VGG16 = function() {
          $scope.networkName='VGG16'
        }

        $scope.ZF = function() {
          $scope.networkName='ZF'
        }

        $scope.VGG_CNN_M_1024 = function() {
          $scope.networkName='VGG_CNN_M_1024'
        }
      })

      app.controller('alertCtrl', function($scope) {
        // add the function to continously display the alters for detected illegal dumping
      })

      app.controller('objectDetectionCtrl', function($scope) {
        // add the function to continously display the detected trash
      })

    // js functions to dynamically read logs from back-end
    script.
      $(document).ready(function monitorTraining() {
        $(".trainingLogRefresh").click(function() {
          for(i = 0; i < 10; ++i)
          $("p.trainingLog").append("This is a training output" + i + "<br />")
        })
        $(".trainingLogReset").click(function() {
          $("p.trainingLog").replaceWith("<p class='trainingLog'></p>")
        })

        $(".alertLogRefresh").click(function() {
          for(i = 0; i < 10; ++i)
          $("p.alertLog").append("This is a alert output" + i + "<br />")
        })
        $(".alertLogReset").click(function() {
          $("p.alertLog").replaceWith("<p class='alertLog'></p>")
        })

        $(".detectionLogRefresh").click(function() {
          for(i = 0; i < 10; ++i)
          $("p.detectionLog").append("This is a detection output" + i + "<br />")
        })
        $(".detectionLogReset").click(function() {
          $("p.detectionLog").replaceWith("<p class='detectionLog'></p>")
        })
        // this function will repeatedly check the updates of logs
        var checker = function(){
          $("p.trainingLog").append("This is a training output <br />")
          $("p.alertLog").append("This is a alert output <br />")
          $("p.detectionLog").append("This is a detection output <br />")
          // jquery function to automatically scroll down to bottom of div
          $(".train").scrollTop($(".train")[0].scrollHeight)
          $(".alert").scrollTop($(".alert")[0].scrollHeight)
          $(".detection").scrollTop($(".detection")[0].scrollHeight)
          clearInternal(timer)
        }
        timer = setInterval(checker, 500)
      })

    // js function to dynamically set display parameter of div
    script.
      var setVisibility = function(classNames) {
        document.getElementsByClassName(classNames[0])[0].style.display = "inline-block";
        for (index = 1; index < classNames.length; ++index) {
          document.getElementsByClassName(classNames[index])[0].style.display = "none";
        }
      }

    // c3 library charts
    script.
      $(document).ready(function() {
      // chart of system status
        var chart = c3.generate({
          bindto: '.sysChart',
          data: {
            x : 'x',
            columns: [
              ['x', '2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04', '2013-01-05', '2013-01-06'],
              ['matrix', 0.55, 0.80, 0.70, 0.68, 0.98, 0.88],
              ['sofa', 0.76, 0.85, 0.96, 0.97, 0.86, 0.78]
            ]
          },
          axis: {
            x: {
              type: 'timeseries',
              tick: {
                  format: '%Y-%m-%d'
              }
            },
            y: {
              label: { // ADD
                text: 'Average Precision',
                position: 'outer-middle'
              },
              tick: {
                format: d3.format(",%") // ADD
              }
            }
          }
        })

      // chart of detection objects info
        var chart = c3.generate({
          bindto: '.objChart',
          data: {
            x : 'x',
            columns: [
              ['x', '2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04', '2013-01-05', '2013-01-06'],
              ['matrix', 0.55, 0.80, 0.70, 0.68, 0.98, 0.88],
              ['sofa', 0.76, 0.85, 0.96, 0.97, 0.86, 0.78]
            ]
          },
          axis: {
            x: {
              type: 'timeseries',
              tick: {
                  format: '%Y-%m-%d'
              }
            },
            y: {
              label: { // ADD
                text: 'Average Precision',
                position: 'outer-middle'
              },
              tick: {
                format: d3.format(",%") // ADD
              }
            }
          }
        })

        $(".AP").click(function() {
          //chart.axis.ticks{x : {format: '%Y-%m-%d'}, y : {format: d3.format(",%")}}
          chart.axis.labels({y : 'Average Precision'})
        })

        $(".cpuUsage").click(function() {
          //chart.axis.ticks{x : {format: '%Y-%m-%d'}, y : {format: d3.format(",%")}}
          chart.axis.labels({y : 'CPU Usage'})
        })

        $(".datasetSize").click(function() {
          //chart.axis.ticks{x : {format: '%Y-%m-%d'}, y : {format: d3.format(",%")}}
          chart.axis.labels({y : 'Dataset Size'})
        })

        $(".detectedObjects").click(function() {
          //chart.axis.ticks{x : {format: '%Y-%m-%d'}, y : {format: d3.format(",%")}}
          chart.axis.labels({y : 'Detected Objects'})
        })

        document.getElementsByClassName("dataViews")[0].style.display = "none";
      })




  title Illegal Dumping Detection Dashboard
  body
    .header
      h1.page-title Illegal Dumping Detection System Dashboard

    div.switchGridButtons
      button(onclick='setVisibility(["sysOps", "dataViews", "logViews"])') System Operations
      button(onclick='setVisibility(["dataViews", "logViews", "sysOps"])') Data Virtualization
      button(onclick='setVisibility(["logViews", "dataViews", "sysOps"])') Log Views

    div(ng-app="dashboard")

      // log views webpage
      div.logViews
        div.left-half
          div.left-half-1
            div.input
              p input
            div.search-model
              div.search(ng-controller="searchCtrl")
                input(type="text", ng-model="imgName")
                button(ng-click="searchButton()") Search Image
              div.model(ng-controller="modelCtrl")
                ul.nav
                  li: button(ng-click="VGG16()") VGG16
                  li: button(ng-click="ZF()") ZF
                  li: button(ng-click="VGG_CNN_M_1024()") VGG_CNN_M_1024
                p Current Network: {{networkName}}
          div.left-half-2
            div.logButtons
              button.alertLogRefresh Manually refresh log
              button.alertLogReset Reset Log
            div.alert
              p.alertLog
            div.logButtons
              button.detectionLogRefresh Manually refresh log
              button.detectionLogReset Reset Log
            div.detection
              p.detectionLog

        div.right-half
          div.logButtons
            button.trainingLogRefresh Manually refresh log
            button.trainingLogReset Reset Log
          div.train(ng-controller="trainCtrl")
            p.trainingLog

      // data virtualization webpage
      div.dataViews
        p Data Virtualization
        div.chartButtons
          button.AP Average Precisions
          button.cpuUsage CPU Usage
          button.datasetSize Dataset Size
          button.detectedObjects Detected Objects
        div.sysChart(ng-controller="chartCtrl")

        div.chartButtons
          button.AP Average Precisions
          button.cpuUsage CPU Usage
          button.datasetSize Dataset Size
          button.detectedObjects Detected Objects
        div.objChart(ng-controller="chartCtrl")

      // system opertations webpage
      div.sysOps
        p System Operations
        div.left-half
          div.left-half-1
            div.input
              p input
            div.search-model
              div.search(ng-controller="searchCtrl")
                input(type="text", ng-model="imgName")
                button(ng-click="searchButton()") Search Image
              div.model(ng-controller="modelCtrl")
                ul.nav
                  li: button(ng-click="VGG16()") VGG16
                  li: button(ng-click="ZF()") ZF
                  li: button(ng-click="VGG_CNN_M_1024()") VGG_CNN_M_1024
                p Current Network: {{networkName}}
        div.right-half
          iframe.detectLocations(src="https://www.google.com/maps/embed/v1/place?key=AIzaSyB-denz3OyVbLzOvKpehCzSLJzNohqAebo &q=Space+Needle,Seattle+WA" allowfullscreen)

    .footer
      p Copyright Â© 2016 Wendy Boo, Alan Chen, Luwen Miao, Xiaoming Chuang
